\set ECHO none
1..12
ok 1
ok 2
ok 3
ok 4
ok 5 - element_range_comp('[10,100]'::int4range, 4)
ok 6 - element_range_comp('[10,100]'::int4range, 10)
ok 7 - element_range_comp('[10,100]'::int4range, 110)
ok 8 - is_singleton('[4,5)'::int4range)
ok 9 - is_singleton('[4,5]'::int4range)
ok 10 - get_collation_expr(null::int4range)
ok 11 - get_collation_expr(null::textrange)
ok 12 - get_collation_expr(null::textrange_c)
select range_merge('[4,5]'::int4range,'[9,10]'::int4range);
[4,11)
select get_lower_bound_condition_expr('empty'::int4range);
false
select get_lower_bound_condition_expr('(,)'::int4range);
true
select get_lower_bound_condition_expr('(4,5]'::int4range);
x >= '5'::integer
select get_lower_bound_condition_expr('(4,5]'::int4range,'y.z');
y.z >= '5'::integer
select get_lower_bound_condition_expr('[4,5]'::int4range,'y.z');
y.z >= '4'::integer
select get_lower_bound_condition_expr('[4,5]'::int4range,format('%I.%I','my schema','my ColuMnaME'));
"my schema"."my ColuMnaME" >= '4'::integer
select get_upper_bound_condition_expr('empty'::int4range);
false
select get_upper_bound_condition_expr('(,)'::int4range);
true
select get_upper_bound_condition_expr('[4,5)'::int4range,'y.z');
y.z < '5'::integer
select get_upper_bound_condition_expr('[4,5]'::int4range,'y.z');
y.z < '6'::integer
select get_upper_bound_condition_expr('[ABEL,BAKER)'::textrange,'y.z');
y.z COLLATE "default" < 'BAKER'::text COLLATE "default"
select get_upper_bound_condition_expr('[ABEL,BAKER)'::textrange_c,'y.z');
y.z COLLATE "C" < 'BAKER'::text COLLATE "C"
select get_bounds_condition_expr('empty'::int4range);
false
select get_bounds_condition_expr('(,)'::int4range);
true
select get_bounds_condition_expr('(4,5]'::int4range);
x >= '5'::integer and x < '6'::integer
select get_bounds_condition_expr('(4,5]'::int4range,'y.z');
y.z >= '5'::integer and y.z < '6'::integer
select get_bounds_condition_expr('[4,5]'::int4range,'y.z');
y.z >= '4'::integer and y.z < '6'::integer
select get_bounds_condition_expr('[4,5)'::int4range,'y.z');
y.z >= '4'::integer and y.z < '5'::integer
select get_bounds_condition_expr('[4,5]'::int4range,'y.z');
y.z >= '4'::integer and y.z < '6'::integer
select get_subtype_element_expr('(4,5]'::int4range);
x
select get_subtype_element_expr('[ABEL,BAKER)'::textrange_c);
x COLLATE "C"
select get_bound_expr(null::int4range,'4');
'4'::integer
select get_bound_expr(null::daterange,'1991-09-23');
'1991-09-23'::date
select get_bound_expr(null::textrange,'ABEL');
'ABEL'::text COLLATE "default"
select get_bound_expr(null::textrange_c,'ABEL');
'ABEL'::text COLLATE "C"
\i test/pgxntool/finish.sql
SELECT finish();
\echo # TRANSACTION INTENTIONALLY LEFT OPEN!
# TRANSACTION INTENTIONALLY LEFT OPEN!
